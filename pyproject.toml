[tool.poetry]
name = "mindful-monarchy"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]
readme = "README.md"
packages = [{include = "mindful_monarchy"}]

[tool.poetry.dependencies]
python = "^3.11"
pygame = "^2.5.1"


[tool.poetry.group.dev.dependencies]
black = "^23.7.0"
mypy = "^1.5.1"
flake8 = "^6.1.0"
pre-commit = "^3.3.3"
flake8-bugbear = "^23.7.10"
isort = "^5.12.0"
toml = "^0.10.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.mypy]
# Check the body of every function, regardless of whether it has type annotations
check_untyped_defs = true
# Warn about casts that do nothing
warn_redundant_casts = true
# Warn about "type: ignore" comments that do nothing
warn_unused_ignores = true
# Warn when a function is missing return statements in some execution paths
warn_no_return = true
# Warn about code determined to be unreachable or redundant after performing type analysis
warn_unreachable = true
# Allow variables to be redefined with a different type
allow_redefinition = true
# Prefixes each error with the relevant context
show_error_context = true
# Shows error codes in error messages, so you can use specific ignore comments i.e., "type: ignore[code]"
show_error_codes = true
# Use visually nicer output in error messages: use soft word wrap, show source code snippets, and show error location
# markers.
pretty = true


[tool.black]
line-length = 120
